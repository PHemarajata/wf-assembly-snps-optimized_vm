/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    wf-assembly-snps Nextflow workflows config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

// This code is adapted from: https://github.com/bactopia/bactopia

params {
    available_workflows {
        aligner      = ['parsnp']
    }
    workflows {
        // Workflows (main SNP workflow)
        'parsnp' {
            description: 'Identify SNPs from genome assemblies.'
            includes    = ['parsnp']
            is_workflow = true
            modules     = ["convert_samplesheet_python", "infile_handling_unix", "core_genome_alignment_parsnp",
                            "convert_gingr_to_fasta_harvesttools", "calculate_pairwise_distances_snp_dists",
                            "create_snp_distance_matrix_snp_dists", "build_phylogenetic_tree_parsnp"]
        }

        // Subworkflows

        // Modules (contains params.config)
        // local
        'convert_samplesheet_python' {
            path        = "modules/local/convert_samplesheet_python"
        }
        'infile_handling_unix' {
            path        = "modules/local/infile_handling_unix"
        }
        'core_genome_alignment_parsnp' {
            path        = "modules/local/core_genome_alignment_parsnp"
        }
        'convert_gingr_to_fasta_harvesttools' {
            path        = "modules/local/convert_gingr_to_fasta_harvesttools"
        }
        'calculate_pairwise_distances_snp_dists' {
            path        = "modules/local/calculate_pairwise_distances_snp_dists"
        }
        'create_snp_distance_matrix_snp_dists' {
            path        = "modules/local/create_snp_distance_matrix_snp_dists"
        }
        'build_phylogenetic_tree_parsnp' {
            path        = "modules/local/build_phylogenetic_tree_parsnp"
        }

        // nf-core/modules
    }
}
